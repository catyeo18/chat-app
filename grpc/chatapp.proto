syntax = "proto3";

package grpc;

// interface exported by the server
service ChatApp {
  rpc createAccount(Username) returns (Empty) {}

  rpc listAccounts(SearchCriteria) returns (Users) {}

  rpc sendMessage(Message) returns (Empty) {}

  rpc receiveMessage(Message) returns (stream Message) {}

  rpc deleteAccount(Username) returns (Empty) {}

  rpc sendData(Data) returns (stream Data) {}
  
  rpc receiveData(Data) returns (stream Data) {}
}

// generic string type for data input, since each op has different syntax
message Data {
  string data = 1;
}

message Username {
  string username = 1;
}

message SearchCriteria {
  string Criteria = 1;
}

message Message {
  string message = 1;
  string sender_name = 2;
  string receiver_name = 3;
}

message User {
  string username = 1;
  string account_id = 2;
}

message Users {
  repeated User users = 1;
}

message Empty {}